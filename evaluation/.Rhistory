install.packages("glmmTMB")
library(glmmTMB)
library(lme4)
library(minqa)
library(nloptr)
library(Rcpp)
library(RcppEigen)
library(statmod)
library(TMB)
library(lme4)
library(nlme)
library(emmeans)
library(GLMMadaptive)
library(glmmTMB)
mushra_data = read.csv(file=file.path("data", "mushra_formatted.csv"))
fm <- mixed_model(fixed = (Rating/100) ~ Condition + Gender + Vowel, random = ~ 1 | ID, data = mushra_data, family = binomial(), control = list(verbose=TRUE))
model = lmmTMB(Rating ~ Condition + Gender + Vowel + (1|ID), mushra_data, family=list(family="beta",link="logit"))
library(glmmTMB)
mushra_data = read.csv(file=file.path("data", "mushra_formatted.csv"))
model = glmmTMB(Rating ~ Condition + Gender + Vowel + (1|ID), mushra_data, family=list(family="beta",link="logit"))
mushra_data = read.csv(file=file.path("data", "mushra_formatted.csv"))
model = glmmTMB(Rating ~ Condition + Gender + Vowel + (1|ID), mushra_data, family=list(family="beta",link="logit"))
library(glmmTMB)
mushra_data = read.csv(file=file.path("data", "mushra_formatted.csv"))
mushra_data = read.csv(file=file.path("data", "mushra_formatted.csv"))
source('C:/Workspace/projects/MasterThesis/MasterThesisEval/evaluation/mushra_anaylsis.R')
mushra_data = read.csv(file=file.path("data", "mushra_formatted.csv"))
setwd("C:/Workspace/projects/MasterThesis/MasterThesisEval/evaluation")
library(glmmTMB)
mushra_data = read.csv(file=file.path("data", "mushra_formatted.csv"))
model = glmmTMB(Rating ~ Condition + Gender + Vowel + (1|ID), mushra_data, family=list(family="beta",link="logit"))
model = glmmTMB(Rating/100 ~ Condition + Gender + Vowel + (1|ID), mushra_data, family=list(family="beta",link="logit"))
View(mushra_data)
mushra_data$R2 = 0.01 + 0.98 * mushra_data$Rating;
mushra_data = read.csv(file=file.path("data", "mushra_formatted.csv"))
mushra_data$R2 = 0.01 + 0.98 * mushra_data$Rating;
View(mushra_data)
mushra_data = read.csv(file=file.path("data", "mushra_formatted.csv"))
library(glmmTMB)
mushra_data = read.csv(file=file.path("data", "mushra_formatted.csv"))
mushra_data$R2 = 0.01 + 0.98 * mushra_data$Rating / 100;
model = glmmTMB(R2 ~ Condition + Gender + Vowel + (1|ID), mushra_data, family=list(family="beta",link="logit"))
model = glmmTMB(R2 ~ Condition + Gender + Vowel + (1|ID), mushra_data, family=beta_family(link = "logit"))
View(model)
mushra_data = read.csv(file=file.path("data", "mushra_formatted.csv"))
mushra_data$R2 = 0.00 + 1.00 * mushra_data$Rating / 100;
model = glmmTMB(R2 ~ Condition + Gender + Vowel + (1|ID), mushra_data, family=beta_family(link = "logit"))
model = glmmTMB(R2 ~ Condition + Gender + Vowel + (1|ID), mushra_data, condition = 'zi', family=beta_family(link = "logit"))
model = glmmTMB(R2 ~ Condition + Gender + Vowel + (1|ID), mushra_data, condition = "zi", family=beta_family(link = "logit"))
model = glmmTMB(R2 ~ Condition + Gender + Vowel + (1|ID), mushra_data, component = "zi", family=beta_family(link = "logit"))
model = glmmTMB(R2 ~ Condition + Gender + Vowel + (1|ID), mushra_data, ziformula = ~., family=beta_family(link = "logit"))
mushra_data$R2 = 1 - 0.99 * mushra_data$Rating / 100;
model = glmmTMB(R2 ~ Condition + Gender + Vowel + (1|ID), mushra_data, ziformula = ~., family=beta_family(link = "logit"))
min(mushra_data$R2)
mushra_data$R2 = 0.99 * (1-mushra_data$Rating / 100);
model = glmmTMB(R2 ~ Condition + Gender + Vowel + (1|ID), mushra_data, ziformula = ~., family=beta_family(link = "logit"))
View(model)
summary(model)
model = glmmTMB(R2 ~ Condition + Gender + Vowel + Gender*Vowel + Gender*Condition + Vowel*Condition + Gender*Vowel*Condition (1|ID), mushra_data, ziformula = ~., family=beta_family(link = "logit"))
model = glmmTMB(R2 ~ Condition + Gender + Vowel + Gender*Vowel + Gender*Condition + Vowel*Condition + Gender*Vowel*Condition + (1|ID), mushra_data, ziformula = ~., family=beta_family(link = "logit"))
summary(model)
